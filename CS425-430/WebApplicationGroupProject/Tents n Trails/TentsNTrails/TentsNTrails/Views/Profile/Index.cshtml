@model TentsNTrails.Models.User

<!-- Google Maps Scripting -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script>
    // Initialize the Map details.
    function initialize() {

        // center of map
        var mapCenter = new google.maps.LatLng(@ViewBag.centerLatitude, @ViewBag.centerLongitude);
        //var mapCenter = new google.maps.LatLng(39.8282, -98.5795);
        // initialize map properties
        var mapProp = {
            center: mapCenter,
            zoom: 4,
            mapTypeId: google.maps.MapTypeId.ROADMAP // types include ROADMAP, SATELLITE, HYBRID, and TERRAIN
        };

        // get the map
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        // add a markers to the map fir each of the book mark types
        @foreach (var item in Model.BeenThereLocations)
        {
            @:console.log("latitude:" + @item.Location.Latitude + " longitude: " +  @item.Location.Longitude);
                                        @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Location.Latitude, @item.Location.Longitude), map: map, icon: 'http://maps.google.com/mapfiles/ms/icons/blue-dot.png'});
                                        @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
                                        @:marker.html='<div><img id="location-image-preview" src="@Url.Content(item.Location.PreviewImageURL)" title="Preview Image" alt="Image of @item.Location.Label" style="width: 100px; height: auto; margin:0 auto;" /><br /><div class="label" text-align="center">@Html.ActionLink(item.Location.Label, "Details", "Location", new { id = item.Location.LocationID }, null)</div></div>';
                                        @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
                                            }
        // add a markers to the map
        @foreach (var item in Model.WantToGoLocations)
        {
            @:console.log("latitude:" + @item.Location.Latitude + " longitude: " +  @item.Location.Longitude);
                                        @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Location.Latitude, @item.Location.Longitude), map: map, icon: 'http://maps.google.com/mapfiles/ms/icons/red-dot.png'});
                                        @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
                                        @:marker.html='<div><img id="location-image-preview" src="@Url.Content(item.Location.PreviewImageURL)" title="Preview Image" alt="Image of @item.Location.Label" style="width: 100px; height: auto; margin:0 auto;" /><br /><div class="label" text-align="center">@Html.ActionLink(item.Location.Label, "Details", "Location", new { id = item.Location.LocationID }, null)</div></div>';
                                        @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
                                             }
        // add a markers to the map
        @foreach (var item in Model.GoAgainLocations)
        {
            @:console.log("latitude:" + @item.Location.Latitude + " longitude: " +  @item.Location.Longitude);
                                        @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Location.Latitude, @item.Location.Longitude), map: map, icon: 'http://maps.google.com/mapfiles/ms/icons/green-dot.png'});
                                        @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
                                        @:marker.html='<div><img id="location-image-preview" src="@Url.Content(item.Location.PreviewImageURL)" title="Preview Image" alt="Image of @item.Location.Label" style="width: 100px; height: auto; margin:0 auto;" /><br /><div class="label" text-align="center">@Html.ActionLink(item.Location.Label, "Details", "Location", new { id = item.Location.LocationID }, null)</div></div>';
                                        @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
                                                    }
    }

    // display the map
    google.maps.event.addDomListener(window, 'load', initialize);
</script>


@{
    ViewBag.Title = "Profile";
}

<!-- FORMATTING -->
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.js"></script>
<script type="text/javascript" src="~/Scripts/jquery.nailthumb.1.1.js"></script>
<link href="~/Content/jquery.nailthumb.1.1.css" type="text/css" rel="stylesheet" />
<style type="text/css" media="screen">
    .square-thumb {
        width: 150px;
        height: 150px;
        margin: 5px;
    }

    .video-thumb {
        width: 200px;
        height: 150px;
        margin: 5px;
    }
</style>

<div class="row">
    <div class="col-xs-12">
        <p style="color: green;">@ViewBag.SuccessMessage</p>
        <hr />
    </div>
</div>

<!--CONNECTIONS-->
<br/>
<div class="row">
    <div class="col-sm-6 col-md-3">
        <!--PROFILE PICTURE-->
        <div style="float: left; overflow: hidden">
            <img id="profile-picture"
                    src="@Url.Content(Model.ProfilePictureUrl)"
                    title="Profile Picture"
                    alt="Image of @Model.UserName"
                    style="width: 100%; height: 200px;" />
            <br />
            @if (ViewBag.IsOnOwnProfile)
            {
                @Html.ActionLink("[Upload new profile picture]", "UploadProfilePicture")
            }
        </div>
    </div>
                
    <!-- USER INFO -->
    <div class="col-md-6 col-sm-6">
        <h2>@Html.DisplayFor(model => model.UserName)</h2>

        @if (!ViewBag.IsPrivate || (ViewBag.IsPrivate && ViewBag.IsConnected))
        {
            <!-- SHOW ALL -->
            <dl class="dl-horizontal">
                <dt>
                    <label>First Name:</label>
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.FirstName)
                </dd>

                <dt>
                    <label>Last Name:</label>
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.LastName)
                </dd>
                
                @if (Model.UserActivities.Count > 0)
                {
                    <dt>
                        <label>Activities:</label>
                    </dt>
                    foreach (var item in Model.UserActivities)
                    {
                        <dd> @Html.DisplayFor(m => item.RecreationLabel) </dd>
                    }
                }

                <dt>
                    <label>About Me:</label>
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.About)
                </dd>
                @if (Request.IsAuthenticated && (User.Identity.Name == Model.UserName || User.IsInRole("Admin")))
                    {
                    <dd class="dl-horizontal">
                        [
                        @Html.ActionLink("Update About Me", "Edit", new { id = Model.Id })
                        ]
                    </dd>
                    }
            </dl>
        }
        else
        {
            <!-- HIDDEN PROFILE -->
            <h4>This user has set their profile to private.</h4>
            <dl class="dl-horizontal">
                @if (Model.UserActivities.Count > 0)
                {
                    <dt>
                        <label>Activities:</label>
                    </dt>
                    foreach (var item in Model.UserActivities)
                    {
                        <dd> @Html.DisplayFor(m => item.RecreationLabel) </dd>
                    }
                }
            </dl>
        }
    </div>

    <!-- CONNECTIONS -->
    <div class="col-md-3" style="padding-left:initial;padding-right:0px">

        @if (!ViewBag.IsOnOwnProfile)
        {
            if (ViewBag.IsConnected)
            {
                <button class="btn btn-primary" disabled>
                    You Are Connected
                </button>
            }
            else if (ViewBag.HasConnectionRequest)
            {
                <h4>@Model.UserName would like to connect with you.</h4>
                <button class="btn btn-success active" onclick="location.href='@Url.Action("ConfirmConnect",
                            "Profile", new { username = Model.UserName })'">
                    Confirm
                </button>
                <button class="btn btn-danger active" onclick="location.href='@Url.Action("DenyConnect",
                            "Profile", new { username = Model.UserName })'">
                    Deny
                </button>
            }
            else if (ViewBag.HasSentRequest)
            {
                <button class="btn btn-primary" disabled>
                    Request Pending
                </button>
            }
            else
            {
                using (Html.BeginForm("RequestConnection", "Profile", new { username = Model.UserName }))
                {
                    @Html.AntiForgeryToken();
                    <input class="btn btn-primary" type="submit" value="Connect" />
                }
            }
        }
        else // This is their own profile
        {
            if (ViewBag.HasRequests)
            {
                <button class="btn btn-primary" onclick="location.href='@Url.Action("RequestList", "Profile")'">
                    See Connection Requests
                </button>
            }
            else
            {
                <button class="btn btn-primary disabled">
                    You Have No Connection Requests
                </button>
            }
        }
    </div>
</div>

<!--PROFILE-->
<div class="row">

@if (!ViewBag.IsPrivate || (ViewBag.IsPrivate && ViewBag.IsConnected))
{
        <!-- USER REVIEWS-->
        <dl class="dl-horizontal">
            @if (Model.UserReviews.Count > 0)
            {
                <dt>
                    Reviews:
                </dt>
                <dd>
                    <table class="reviews">
                        @foreach (var item in Model.UserReviews)
                        {
                            if (item.Comment != null)
                            {
                                <tr class="review-row">
                                    <td>
                                        <div id="review">
                                            <p>
                                                @Html.ActionLink(item.Location.Label, "Details", "Location", new { id = item.LocationID }, null)
                                            </p>
                                            @if (item.Rating)
                                            {
                                                <span class="glyphicon glyphicon-thumbs-up green" aria-hidden="true"></span>
                                            }
                                            else
                                            {
                                                <span class="glyphicon glyphicon-thumbs-down red" aria-hidden="true"></span>
                                            }

                                            <b>@Html.DisplayFor(modelItem => item.Comment)</b>
                                            <br />
                                            By @Html.ActionLink(item.User.UserName, "Index", "Profile", new { Username = item.User.UserName }, null) on @Html.DisplayFor(modelItem => item.ReviewDate)
                                        </div>
                                    </td>
                                </tr>
                            }
                        }
                    </table>
                </dd>
            }
            else
            {
                <dt>
                    Reviews:
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.UserName) has not made any reviews.
                </dd>
            }
        </dl>

        <!-- USER BOOKMARKS-->
        <dl class="dl-horizontal">
            @if (Model.BeenThereLocations.Count > 0 || Model.WantToGoLocations.Count > 0 || Model.GoAgainLocations.Count > 0)
            {
                <dt>
                    @Html.ActionLink("Bookmarked Locations: ", "Index", "LocationFlag")
                </dt>
                <dd>
                    <div class="row">
                        <div class="col-sm-9 col-xs-12">
                            <!-- MAP OF BOOKMARKED LOCATIONS-->
                            <div id="googleMap" style="width:100%;height:300px;"></div>   
                        </div>
                        <div class="col-sm-3 col-xs-12">
                            Been There <img src="http://maps.google.com/mapfiles/ms/icons/blue-dot.png" alt="Blue Pin" style="height:20px" />
                            <br />
                            Want to Go <img src="http://maps.google.com/mapfiles/ms/icons/red-dot.png" alt="Red Pin" style="height:20px" />
                            <br />
                            Want to Go Again <img src="http://maps.google.com/mapfiles/ms/icons/green-dot.png" alt="Green Pin" style="height:20px" />
                        </div>
                    </div>
                </dd>
            }
            else
            {
                <dt>
                    Bookmarked Locations:
                </dt>
                <dd>
                    @Html.DisplayFor(model => model.UserName) has no bookmarked locations.
                </dd>
            }
        </dl>

        <!-- USER'S LOCATION IMAGES -->
        <dl class="dl-horizontal">
            <dt>
                Uploaded Images:
            </dt>

            <!-- BEGIN IMAGES -->
            <dd>
                @if (ViewBag.ImagesCount == 0)
                {
                    <p>@Model.UserName has not uploaded any images.</p>
                }
                else if (ViewBag.ImagesCount > 5)
                {
                    <p>@Html.ActionLink("[See More]", "SeeMoreImages", "Profile", new { Username = Model.UserName, redirect = true }, null)</p>
                    
                <table class="table-responsive">
                    <tr>
                        <td class="thumbnail">
                            @foreach (var item in Model.UserLocationImages)
                            {
                    <!-- DETAILS ACTION LINK-->
                                <a href="@Url.Action("Details", "LocationImage", new { id = item.ImageID })">

                                    <!-- IMAGE-->
                                    <img id="@item.ImageID"
                                         src="@Url.Content(item.ImageUrl)"
                                         title="@item.Title"
                                         alt="@item.AltText"
                                         height="100"
                                         width="100" />
                                </a>
                            }
                        </td>
                    </tr>
                </table>
                }
                else
                {

                    <table class="table-responsive">
                        <tr>
                            <td class="thumbnail">
                                @foreach (var item in Model.UserLocationImages)
                                {
                                    
                                    <!-- DETAILS ACTION LINK-->
                                    <a href="@Url.Action("Details", "LocationImage", new { id = item.ImageID })">

                                        <!-- IMAGE-->
                                        <img id="@item.ImageID"
                                             src="@Url.Content(item.ImageUrl)"
                                             title="@item.Title"
                                             alt="@item.AltText"
                                             height="100"
                                             width="100" />
                                    </a>
                                }
                            </td>
                        </tr>
                    </table>
                }
            </dd>
        </dl>

        <!-- USER'S LOCATION VIDEOS -->
        <dl class="dl-horizontal">
            <dt>
                Uploaded Videos:
            </dt>

            <!-- BEGIN VIDEOS -->
            <dd>
                @if (ViewBag.VideosCount == 0)
                {
                    <p>@Model.UserName has not uploaded any videos.</p>
                }
                else
                {
                    <!-- VIDEO GRID -->
                    <div class="row" align="center">
                        <div class="col-xs-12">
                            @if (ViewBag.VideosCount > 4)
                            {
                                <p>@Html.ActionLink("[See More]", "SeeMoreVideos", "Profile", new { Username = Model.UserName, redirect = true }, null)</p>
                            }

                            @foreach (var item in Model.UserLocationVideos)
                            {
                                string videoThumbnailUrl = item.GetThumbnailUrl();

                                // Embedded Video (If imageUrl was not found)
                                if (videoThumbnailUrl == item.EmbedCode)
                                {
                                    <div class="col-xs-2">
                                        <div class="video-container">
                                            @Html.Raw(item.EmbedCode)
                                        </div>
                                    </div>
                                }

                                // otherwise, show video thumbnail image
                                else
                                {
                                    <div class="nailthumb-container video-thumb col-xs-3">
                                        <a href="@Url.Action("Details", "LocationVideo", new { id = item.VideoID })">
                                            <img id="@item.VideoID"
                                                 src="@Url.Content(videoThumbnailUrl)"
                                                 title="@((item.Description.Length > 100) ? item.Description.Substring(0,100) : item.Description)"
                                                 alt="@("Video thumbnail of " + Model.UserName)" />
                                        </a>
                                    </div>
                                }
                            }
                        </div>
                    </div>

                }

            </dd>
        </dl>
}
    </div>

<!-- IMAGE-THUMBTNAIL SCRIPT -->
<script type="text/javascript">
    jQuery(document).ready(function () {
        jQuery('.nailthumb-container').nailthumb();
    });
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
