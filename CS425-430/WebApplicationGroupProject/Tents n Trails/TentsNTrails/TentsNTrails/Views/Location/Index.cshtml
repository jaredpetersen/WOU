@model TentsNTrails.Models.LocationIndexViewModel
@using PagedList.Mvc
@using TentsNTrails.Models
@{
    int padding = 7;
    int minHeight = 124;
    int minWidth = 370;    
}

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

<!-- Google Maps Scripting -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script>
    // Initialize the Map details.
    function initialize() {

        // center of map
        var mapCenter = new google.maps.LatLng(@ViewBag.centerLatitude, @ViewBag.centerLongitude);
        //var mapCenter = new google.maps.LatLng(39.8282, -98.5795);
        // initialize map properties
        var mapProp = {
            center: mapCenter,
            zoom: 4,
            mapTypeId: google.maps.MapTypeId.ROADMAP // types include ROADMAP, SATELLITE, HYBRID, and TERRAIN
        };

        // get the map
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        // add a markers to the map
        @foreach (var item in Model.Locations)
        {
            @:console.log("latitude:" + @item.Latitude + " longitude: " +  @item.Longitude);
                            @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Latitude, @item.Longitude), map: map});
                            @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
                            @:marker.html='<div><img id="location-image-preview" src="@Url.Content(item.PreviewImageURL)" title="Preview Image" alt="Image of @item.Label" style="width: 100px; height: auto; margin:0 auto;" /><br /><div class="label" text-align="center">@Html.ActionLink(item.Label, "Details", new { id = item.LocationID })</div></div>';
                            @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
                        }
    }

    // display the map
    google.maps.event.addDomListener(window, 'load', initialize);
</script>

@{
    ViewBag.Title = "Locations";
}
<div class="row">

    <!--TITLE-->
    <div class="col-xs-12 col-sm-6">
        <h2>@ViewBag.Title <a href="/Location/Create"><span title="Add New Location" style="color: green;"><i class="glyphicon glyphicon-plus"></i></span></a></h2>
    </div>

    <!--RECREATIONS FILTER-->
    <div class="col-xs-12 col-sm-6">
        <br />
        <div class="dropdown" style="float:right">
            <button class="btn btn-default dropdown-toggle" type="button" id="dropdownMenu1" data-toggle="dropdown" aria-expanded="true">
                Filter by Recreation Type
                <span class="caret"></span>
            </button>
            <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu1">
                <li>@Html.ActionLink("All", "Browse", "Location", null, new { role = "menuItem", tabindex = "-1" })</li>
                @foreach (var item in Model.Recreations)
                {
                    <li>@Html.ActionLink(item.Label, "Browse", "Location", new { recreationID = item.RecreationID }, new { role = "menuItem", tabindex = "-1" })</li>
                }
            </ul>
        </div>
    </div>

</div>

<br />

<!-- MAP -->
<div class="row" style="padding-top:15px;">
    <div class="col-xs-12">
        <div id="googleMap" style="width:100%;height:300px;"></div>
        <p></p>
    </div>
</div>

<div class="row">

    <!-- SEARCH -->
    <div class="col-xs-12 col-sm-6">

        <!-- SEARCH -->
        @using (Html.BeginForm("Browse", "Location"))
        {
            <div class="input-group">
                <span class="input-group-btn">
                    <button class="btn btn-default" id="btn" type="submit">
                        <span class="glyphicon glyphicon-search" aria-hidden="true"></span>
                    </button>
                </span>
                @Html.TextBox("query", null, new { @class = "form-control", placeholder = "Search by Name or State" })
            </div>
        }
    </div>

    <!-- BROWSE ALL -->
    <div class="col-xs-12 col-sm-6">
        <button class="btn btn-default" onclick="location.href='@Url.Action("Browse")'" style="float:right">
            Browse All Locations
        </button>
    </div>
</div>

@if (User.Identity.IsAuthenticated)
{
    <!-- RECCOMENDATIONS -->
    <div class="row" style="padding: 0px @(padding)px 0px @(padding)px">
        <div class="col-xs-12">
            <hr />
            <h2>Your Recommendations</h2>
        </div>

        <!-- PERSONAL -->
        <div class="col-xs-12 col-md-6">

            <br />
            <h4>Based On Your Interests</h4>
            <div class="row">
                @if (Model.PersonalRecommendations.Count == 0)
                {
                    <div class="col-xs-12" style="padding: @(padding)px;">
                        <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                            <p>
                                <span style="color:red">We don't have any personal recommendations for you yet.</span>
                           </p>
                            <p>  
                                When you @Html.ActionLink("review", "Index", "Review")
                                or @Html.ActionLink("bookmark", "Index", "LocationFlag") locations, or list
                                what @Html.ActionLink("activities", "ChangeActivities", "Manage")
                                you enjoy, we will recommend locations based on what you like.
                            </p>
                        </div>
                    </div>

                }
                else
                {
                    foreach (var item in Model.PersonalRecommendations)
                    {
                        <div class="col-xs-12" style="padding: @(padding)px;">
                            <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                                @{ Html.RenderAction("Summary", "Location", new { id = item.LocationID }); }
                            </div>
                        </div>
                    }

                }
            </div>
        </div>

        <!-- FRIENDS -->
        <div class="col-xs-12 col-md-6">
            <br />
            <h4>Locations Your Friends Like</h4>
            <div class="row">
                @if (Model.FriendRecommendations.Count == 0)
                {
                    <div class="col-xs-12" style="padding: @(padding)px;">
                        <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                            <p>
                                <span style="color:red">We don't have any recommendations from your friends yet.</span>
                            </p>
                            <p>
                                When you @Html.ActionLink("connect", "Index", "Users") with other users,
                                we will recommend locations based on your friends' interests.
                            </p>
                        </div>
                    </div>

                }
                else
                {
                    foreach (var item in Model.FriendRecommendations)
                    {
                        <div class="col-xs-12" style="padding: @(padding)px;">
                            <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                                @{ Html.RenderAction("Summary", "Location", new { id = item.LocationID }); }
                            </div>
                        </div>
                    }
                }                
            </div>
        </div>


    </div>
}

<div class="row" style="padding: 0px @(padding)px 0px @(padding)px">
    <div class="col-xs-12">
        <hr />
    </div>

    <!-- TOP RATED LOCATION TABLE -->
    <div class="col-xs-12 col-md-6">
        <h2>Top Rated</h2>
        <div class="row">
            @foreach (var item in Model.TopRatedLocations)
            {
                <div class="col-xs-12" style="padding: @(padding)px;">
                    <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                        @{ Html.RenderAction("Summary", "Location", new { id = item.LocationID }); }
                    </div>
                </div>
            }
        </div>
    </div>

    <!-- RECENTLY ADDED LOCATION TABLE -->
    <div class="col-xs-12 col-md-6">
        <h2>Recently Added</h2>
        <div class="row">
            @foreach (var item in Model.MostRecentLocations)
            {
                <div class="col-xs-12" style="padding: @(padding)px;">
                    <div id="review" style="min-height: @(minHeight)px; min-width: @(minWidth)px">
                        @{ Html.RenderAction("Summary", "Location", new { id = item.LocationID }); }
                    </div>
                </div>
            }
        </div>
    </div>

</div>

@if (Request.IsAuthenticated && User.IsInRole("Admin"))
{
    @Html.ActionLink("Recreations", "Index", "Recreation")
}