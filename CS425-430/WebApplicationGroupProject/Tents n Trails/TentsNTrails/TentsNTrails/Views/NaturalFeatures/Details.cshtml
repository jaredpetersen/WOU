@model TentsNTrails.Models.NaturalFeatureDetailsViewModel
@using TentsNTrails.Models
@using PagedList.Mvc
@{
    ViewBag.Title = Model.NaturalFeature.Name + " Details";
}

<!-- Google Maps Scripting -->
<script src="http://maps.googleapis.com/maps/api/js"></script>
<script>
    // Initialize the Map details.
    function initialize() {

        // center of map
        var mapCenter = new google.maps.LatLng(@ViewBag.centerLatitude, @ViewBag.centerLongitude);

        // initialize map properties
        var mapProp = {
            center: mapCenter,
            zoom: 4,
            mapTypeId: google.maps.MapTypeId.ROADMAP // types include ROADMAP, SATELLITE, HYBRID, and TERRAIN
        };

        // array of markers
        var markers = [];

        // get the map
        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        // add a markers to the map
        @foreach (var item in Model.AllLocations)
        {
            @:console.log("latitude:" + @item.Latitude + " longitude: " +  @item.Longitude);
            @:var marker = new google.maps.Marker({position: new google.maps.LatLng(@item.Latitude, @item.Longitude), map: map});
            @:var infowindow = new google.maps.InfoWindow({content: 'Loading...'});
            @:marker.html='<div><img id="location-image-preview" src="@Url.Content(item.PreviewImageURL)" title="Preview Image" alt="Image of @item.Label" style="width: 100px; height: auto; margin:0 auto;" /><br /><div class="label" text-align="center">@Html.ActionLink(item.Label, "Details", "Location", new { id = item.LocationID }, null)</div></div>';
            @:google.maps.event.addListener(marker, 'click', function() {infowindow.setContent(this.html); infowindow.open(map,this);});
            @:markers.push(marker);
        }

        var bounds = new google.maps.LatLngBounds();
        for(var i=0; i < markers.length; i++) {
            bounds.extend(markers[i].getPosition());
        }

        map.fitBounds(bounds);
    }

    // display the map
    google.maps.event.addDomListener(window, 'load', initialize);
</script>


<h2>@Model.NaturalFeature.Name</h2>
<hr/>

@if (User.Identity.IsAuthenticated && User.IsInRole("Admin"))
{
    <p>
        @Html.ActionLink("Edit", "Edit", new { id = Model.NaturalFeature.ID })      
    </p>
}
<p>
    Showing all @Html.ActionLink("Locations", "Index", "Location") associated with the Natural Feature
    <span class="tag tag-natural-feature tag-normal-size">@Model.NaturalFeature.Name</span>
</p>

<!-- MAP -->
<div class="row" style="padding-top:15px;">
    <div class="col-xs-12">
        <div id="googleMap" style="width:100%;height:500px;"></div>
        <p></p>
    </div>
</div>
<br />

<!--PAGING-->
Page @(Model.Locations.PageCount < Model.Locations.PageNumber ? 0 : Model.Locations.PageNumber) of @Model.Locations.PageCount
@Html.PagedListPager(Model.Locations, page => Url.Action("Details", new { page, id = Model.NaturalFeature.ID }))
@Html.ActionLink("Back to List", "Index")

<!-- LOCATIONS -->
@{
    int padding = 7;
    int count = Model.Locations.Count();
    for (int i = 0; i < count; i += 2)
    {
        <div class="row" style="padding: 0px @(padding)px 0px @(padding)px">
            @for (int j = i; j < Math.Min(i + 2, count); j++)
            {
                Location item = Model.Locations[j];
                <div class="col-xs-12 col-md-6" style="padding: @(padding)px;">
                    <div id="review" style="min-height: 124px; min-width:370px">
                        @{ Html.RenderAction("Summary", "Location", new { id = item.LocationID }); }
                    </div>
                </div>
            }
        </div>
    }
}
<br />

